package linear_square_equation;

import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.KeyListener;

import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JTextField;

public class Equation extends JFrame implements ActionListener
{
	private JLabel lbA,lbB,lbC,lbT,lbResult;
	private JTextField txtA,txtB,txtC,txtResult;
	private JButton btnSolve,btnReset,btnExit;
	private JPanel pA,pB,pC,pResult,pBtn,pR;
	private JRadioButton rL,rS;
	public  Equation() {
		
		//1. thiet lap cho Frame
		super("Equation");
		super.setSize(300,400);
		super.setLocationRelativeTo(null);
		super.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		super.setVisible(true);
		super.setLayout(new GridLayout(7,1));
		
		lbT= new JLabel();
		lbT.setText("LinearEquation and SquareEquation");
		lbT.setForeground(Color.RED);
		lbT.setFont(getFont());
		this.getContentPane().add(lbT);
		
		
		//2.tao cac panels components
		pA = new JPanel();
		//pA.setLayout(new FlowLayout()); //default layout cua JPanel la FlowLayout
		lbA= new JLabel("Enter a");
		txtA= new JTextField(10);
		pA.add(lbA);
		pA.add(txtA);
				
		pB = new JPanel();
		lbB= new JLabel("Enter b");
		txtB= new JTextField(10);
		pB.add(lbB);
		pB.add(txtB);
		
		pC= new JPanel();
		lbC= new JLabel("Enter c");
		txtC= new JTextField(10);
		pC.add(lbC);
		pC.add(txtC);
				
		pResult = new JPanel();
		lbResult= new JLabel("Result");
		txtResult= new JTextField(15);
		txtResult.setEnabled(false);
		pResult.add(lbResult);
		pResult.add(txtResult);
		
		rL=new JRadioButton("LinearEquation");
		rS=new JRadioButton("SquareEquation");
		
		

		pR= new JPanel();
		pR.add(rS);
		pR.add(rL);
		
				
		pBtn= new JPanel();
		btnSolve= new JButton("Solve");
		btnReset= new JButton("Reset");
		btnExit= new JButton("Exit");
		pBtn.add(btnSolve);
		pBtn.add(btnReset);
		pBtn.add(btnExit);
		
		
		
		
				
		//3.them cac components vao Frame
		super.add(pA);
		super.add(pB);
		super.add(pC);
		super.add(pResult);
		super.add(pR);
		super.add(pBtn);
		
	
		
		super.validate();
		
	}
	public void itemStateChanged(ItemEvent e) {
		int t;
		if(e.getItem()==rL) {
			t=1;
			super.remove(pA);
		}
		else if(e.getItem()==rS) {
			t=2;
		}
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		if(e.getSource()==btnReset) {
			txtA.setText("");
			txtB.setText("");
			txtC.setText("");
			txtResult.setText("");
		}
		else if(e.getSource()==btnExit)
			System.exit(0);
		else if(e.getSource()==btnSolve) {
			double b=Double.parseDouble(txtB.getText());
			double c=Double.parseDouble(txtC.getText());
			if(b == 0) 
				if(c==0) 
					txtResult.setText("Unlimited roots");
				else 
					txtResult.setText("no root");
			else {
				txtResult.setText(" x = "+ (-c/b));
			}
		}
		else if(e.getSource()==btnSolve && t==2) {
			double a=Double.parseDouble(txtA.getText());
			double b=Double.parseDouble(txtB.getText());
			double c=Double.parseDouble(txtC.getText());
			if((b*b-4*a*c) < 0)
				txtResult.setText("Unlimited roots");
				else if((b*b-4*a*c) == 0)
					txtResult.setText(" x = "+ (-b/2*a));
					else 
					{
						txtResult.setText("x1 = "+ (-b+Math.sqrt(b*b-4*a*c))/2*a +"\n"
										+"x2 = "+ (-b-Math.sqrt(b*b-4*a*c))/2*a);
					}
		}
		
	}
	public static void main(String[] args) {
		Equation tu = new Equation();
		
	}

}
